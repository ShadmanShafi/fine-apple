{"ast":null,"code":"var _jsxFileName = \"/home/shafi/Repositories/fine-apple/src/components/FibonacciVisualizer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FibonacciVisualizer = ({\n  n,\n  isPaused\n}) => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  useEffect(() => {\n    const generateFibonacci = n => {\n      let fib = [1, 1];\n      for (let i = 2; i < n; i++) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n      }\n      return fib;\n    };\n    const newSequence = generateFibonacci(n);\n    setSequence(newSequence);\n  }, [n]);\n  useEffect(() => {\n    let interval = null;\n    if (!isPaused) {\n      interval = setInterval(() => {\n        setCurrentStep(prevStep => prevStep < sequence.length ? prevStep + 1 : prevStep);\n      }, 1000);\n    } else if (interval) {\n      clearInterval(interval);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isPaused, sequence]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-2xl mb-4\",\n      children: \"Fibonacci Sequence:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), sequence.slice(0, currentStep).map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl\",\n      children: index > 1 ? `${sequence[index - 2]} + ${sequence[index - 1]} = ${num}` : num\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(FibonacciVisualizer, \"F6eFcVrU47TQcZ0yBMRib2tPBOM=\");\n_c = FibonacciVisualizer;\nexport default FibonacciVisualizer;\nvar _c;\n$RefreshReg$(_c, \"FibonacciVisualizer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","FibonacciVisualizer","n","isPaused","_s","sequence","setSequence","currentStep","setCurrentStep","generateFibonacci","fib","i","push","newSequence","interval","setInterval","prevStep","length","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","num","index","_c","$RefreshReg$"],"sources":["/home/shafi/Repositories/fine-apple/src/components/FibonacciVisualizer.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\ninterface FibonacciVisualizerProps {\n  n: number;\n  isPaused: boolean;\n}\n\nconst FibonacciVisualizer: React.FC<FibonacciVisualizerProps> = ({\n  n,\n  isPaused,\n}) => {\n  const [sequence, setSequence] = useState<number[]>([]);\n  const [currentStep, setCurrentStep] = useState<number>(0);\n\n  useEffect(() => {\n    const generateFibonacci = (n: number): number[] => {\n      let fib = [1, 1];\n      for (let i = 2; i < n; i++) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n      }\n      return fib;\n    };\n\n    const newSequence = generateFibonacci(n);\n    setSequence(newSequence);\n  }, [n]);\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout | null = null;\n\n    if (!isPaused) {\n      interval = setInterval(() => {\n        setCurrentStep((prevStep) =>\n          prevStep < sequence.length ? prevStep + 1 : prevStep\n        );\n      }, 1000);\n    } else if (interval) {\n      clearInterval(interval);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isPaused, sequence]);\n\n  return (\n    <div>\n      <h3 className=\"text-2xl mb-4\">Fibonacci Sequence:</h3>\n      {sequence.slice(0, currentStep).map((num, index) => (\n        <div key={index} className=\"text-xl\">\n          {index > 1\n            ? `${sequence[index - 2]} + ${sequence[index - 1]} = ${num}`\n            : num}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FibonacciVisualizer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOnD,MAAMC,mBAAuD,GAAGA,CAAC;EAC/DC,CAAC;EACDC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAW,EAAE,CAAC;EACtD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAS,CAAC,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACd,MAAMY,iBAAiB,GAAIP,CAAS,IAAe;MACjD,IAAIQ,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,CAAC,EAAES,CAAC,EAAE,EAAE;QAC1BD,GAAG,CAACE,IAAI,CAACF,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGD,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,CAAC;MACnC;MACA,OAAOD,GAAG;IACZ,CAAC;IAED,MAAMG,WAAW,GAAGJ,iBAAiB,CAACP,CAAC,CAAC;IACxCI,WAAW,CAACO,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACX,CAAC,CAAC,CAAC;EAEPL,SAAS,CAAC,MAAM;IACd,IAAIiB,QAA+B,GAAG,IAAI;IAE1C,IAAI,CAACX,QAAQ,EAAE;MACbW,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BP,cAAc,CAAEQ,QAAQ,IACtBA,QAAQ,GAAGX,QAAQ,CAACY,MAAM,GAAGD,QAAQ,GAAG,CAAC,GAAGA,QAC9C,CAAC;MACH,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAIF,QAAQ,EAAE;MACnBI,aAAa,CAACJ,QAAQ,CAAC;IACzB;IAEA,OAAO,MAAM;MACX,IAAIA,QAAQ,EAAEI,aAAa,CAACJ,QAAQ,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACX,QAAQ,EAAEE,QAAQ,CAAC,CAAC;EAExB,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAIoB,SAAS,EAAC,eAAe;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrDnB,QAAQ,CAACoB,KAAK,CAAC,CAAC,EAAElB,WAAW,CAAC,CAACmB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC7C5B,OAAA;MAAiBoB,SAAS,EAAC,SAAS;MAAAD,QAAA,EACjCS,KAAK,GAAG,CAAC,GACN,GAAGvB,QAAQ,CAACuB,KAAK,GAAG,CAAC,CAAC,MAAMvB,QAAQ,CAACuB,KAAK,GAAG,CAAC,CAAC,MAAMD,GAAG,EAAE,GAC1DA;IAAG,GAHCC,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAlDIH,mBAAuD;AAAA4B,EAAA,GAAvD5B,mBAAuD;AAoD7D,eAAeA,mBAAmB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}